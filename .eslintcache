[{"E:\\learn\\react-hooks\\src\\index.js":"1","E:\\learn\\react-hooks\\src\\Component\\Accordion.js":"2","D:\\learn\\WidgetApp\\src\\index.js":"3","D:\\learn\\WidgetApp\\src\\Component\\Accordion.js":"4","D:\\learn\\WidgetApp\\src\\Component\\Search.js":"5","D:\\learn\\WidgetApp\\src\\Component\\DropDown.js":"6"},{"size":523,"mtime":1607234709164,"results":"7","hashOfConfig":"8"},{"size":780,"mtime":1607234999597,"results":"9","hashOfConfig":"8"},{"size":1005,"mtime":1608217812107,"results":"10","hashOfConfig":"11"},{"size":789,"mtime":1607266433781,"results":"12","hashOfConfig":"11"},{"size":1634,"mtime":1607868859294,"results":"13","hashOfConfig":"11"},{"size":670,"mtime":1608217940371,"results":"14","hashOfConfig":"11"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wmqm64",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"kxjeez",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\learn\\react-hooks\\src\\index.js",[],"E:\\learn\\react-hooks\\src\\Component\\Accordion.js",["30","31"],"D:\\learn\\WidgetApp\\src\\index.js",["32","33","34"],"D:\\learn\\WidgetApp\\src\\Component\\Accordion.js",["35"],"import React, { useState } from \"react\";\r\n\r\nconst Accordion = ({ items }) => {\r\n  const [activeIndex, setActiveIndex] = useState(null);\r\n\r\n  const onTitleClicked = (i) => {\r\n    setActiveIndex(i);\r\n  };\r\n\r\n  const renderitems = items.map((item, index) => {\r\n    const active = index == activeIndex ? \"active\" : \"\";\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className={`title ${active}`}\r\n          onClick={() => onTitleClicked(index)}\r\n        >\r\n          <i className=\"dropdown icon\" />\r\n          {item.title}\r\n        </div>\r\n        <div className={`content ${active}`}>\r\n          <p>{item.content}</p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n  return <div className=\"ui styled accordion\">{renderitems}</div>;\r\n};\r\n\r\nexport default Accordion;\r\n",["36","37"],"D:\\learn\\WidgetApp\\src\\Component\\Search.js",["38"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Search = () => {\r\n  const [term, setTerm] = useState(\"programming\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const search = async () => {\r\n      const { data } = await axios.get(\"https://en.wikipedia.org/w/api.php\", {\r\n        params: {\r\n          action: \"query\",\r\n          list: \"search\",\r\n          origin: \"*\",\r\n          format: \"json\",\r\n          srsearch: term,\r\n        },\r\n      });\r\n      setResults(data.query.search);\r\n    };\r\n\r\n    if (term && !results.length) {\r\n      search();\r\n    } else {\r\n      const timeoutID = setTimeout(() => {\r\n        if (term) {\r\n          search();\r\n        }\r\n      }, 500);\r\n\r\n      return () => {\r\n        clearTimeout(timeoutID);\r\n      };\r\n    }\r\n  }, [term]);\r\n\r\n  const renderResults = results.map((result) => {\r\n    return (\r\n      <div key={result.pageid} className=\"item\">\r\n        <div className=\"content\">\r\n          <div className=\"header\">{result.title}</div>\r\n          <span dangerouslySetInnerHTML={{ __html: result.snippet }}></span>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"ui segment\">\r\n      <form className=\"ui form\">\r\n        <div className=\"field\">\r\n          <label> Search</label>\r\n          <input\r\n            type=\"text\"\r\n            value={term}\r\n            onChange={(e) => {\r\n              setTerm(e.target.value);\r\n            }}\r\n          ></input>\r\n        </div>\r\n      </form>\r\n      <div className=\"ui celled list\">{renderResults}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","D:\\learn\\WidgetApp\\src\\Component\\DropDown.js",["39"],{"ruleId":"40","severity":1,"message":"41","line":5,"column":12,"nodeType":"42","messageId":"43","endLine":5,"endColumn":23},{"ruleId":"40","severity":1,"message":"44","line":5,"column":24,"nodeType":"42","messageId":"43","endLine":5,"endColumn":38},{"ruleId":"40","severity":1,"message":"45","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":17},{"ruleId":"40","severity":1,"message":"46","line":5,"column":8,"nodeType":"42","messageId":"43","endLine":5,"endColumn":14},{"ruleId":"40","severity":1,"message":"47","line":7,"column":7,"nodeType":"42","messageId":"43","endLine":7,"endColumn":12},{"ruleId":"48","severity":1,"message":"49","line":11,"column":26,"nodeType":"50","messageId":"51","endLine":11,"endColumn":28},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":35,"column":6,"nodeType":"58","endLine":35,"endColumn":12,"suggestions":"59"},{"ruleId":"40","severity":1,"message":"60","line":1,"column":10,"nodeType":"42","messageId":"43","endLine":1,"endColumn":16},"no-unused-vars","'activeIndex' is assigned a value but never used.","Identifier","unusedVar","'setActiveIndex' is assigned a value but never used.","'Accordion' is defined but never used.","'Search' is defined but never used.","'items' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'results.length'. Either include it or remove the dependency array.","ArrayExpression",["63"],"'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [results.length, term]",{"range":"66","text":"67"},[826,832],"[results.length, term]"]